services:
  # Service PostgreSQL
  postgres:
    image: postgres:14
    container_name: myunity-postgres
    environment:
      POSTGRES_DB: myunitydb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - myunity-network
    restart: unless-stopped

  # Service Backend Spring Boot
  backend:
    build: ./spring_backend
    container_name: myunity-backend
    depends_on:
      - postgres
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/myunitydb
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      APP_JWT_SECRET: ${JWT_SECRET:-YourDefaultSecretKeyHereIfNotSetViaEnv}
      APP_JWT_EXPIRATION_MS: 86400000
    ports:
      - "8080:8080"
    networks:
      - myunity-network
    restart: unless-stopped

  # Service Frontend React
  frontend:
    build: ./react_frontend
    container_name: myunity-frontend
    depends_on:
      - backend
    environment:
      REACT_APP_API_URL: http://localhost:8080/api
    ports:
      - "3000:80"
    networks:
      - myunity-network
    restart: unless-stopped

networks:
  myunity-network:
    driver: bridge

volumes:
  postgres-data:
